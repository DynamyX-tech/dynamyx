---
import "@/styles/kalex.css";
import { Input } from "@/components/ui/input";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Building amazing solutions that matter."
    />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Kalex register Page</title>
  </head>
  <body>
    <main class="flex h-screen items-center justify-center">
      <div class="flex w-max flex-col items-center gap-4">
        <div class="flex flex-col items-center">
          <div class="text-2xl">Create a New Account</div>
          <h4 class="text-primary">
            Enter your credentials below to create your account
          </h4>
        </div>
        <form
          name="ReachOut"
          class="flex w-[25vw] flex-col gap-3"
          data-netlify="true"
          method="POST"
        >
          <Input
            type="text"
            placeholder="your username here"
            name="name"
            required
            aria-label="name"
            required
            className=" text-card-foreground placeholder:text-input"
          />
          <Input
            type="password"
            placeholder="make your password"
            name="enter yourpassword"
            aria-label="password"
            required
            className=" text-card-foreground placeholder:text-input"
          />
          <Button type="submit">Submit</Button>
        </form>
      </div>
    </main>

    <script is:inline>
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
  </body>
</html>
